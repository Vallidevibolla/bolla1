# -*- coding: Question 1 -*-
"""coeffs.ipynb
Automatically generated by Colaboratory.
Original file is located at
       https://colab.research.google.com/github/Vallidevibolla/ass/blob/main/tri_sss.ipynb#scrollTo=_qclhhOTwHkU
"""

#Code by B.Valli Devi
#June 23, 2021
#Drawing a right angled triangle ABD

import numpy as np
import matplotlib.pyplot as plt

#Sides
a = 4
b = 3
c = np.sqrt(a**2+b**2)


#Triangle vertices
D= np.array([0,b]) 
B = np.array([a,0]) 
A = np.array([0,0]) 

#Mid point of D,B
C=np.array([a/2,b/2])



#Generating all lines
x_DB = line_gen(D,B)
x_BA = line_gen(B,A)
x_AD = line_gen(A,D)
x_AC = line_gen(A,C)

#Plotting all lines
plt.plot(x_AB[0,:],x_AB[1,:],label='$AB$')
plt.plot(x_BC[0,:],x_BC[1,:],label='$BC$')
plt.plot(x_CA[0,:],x_CA[1,:],label='$CA$')
plt.plot(x_CD[0,:],x_CD[1,:],label='$CD$')

plt.plot(A[0], A[1], 'o')
plt.text(A[0] * (1 + 0.05), A[1] * (1 - 0.1) , 'A')
plt.plot(B[0], B[1], 'o')
plt.text(B[0] * (1), B[1] * (1) , 'B')
plt.plot(C[0], C[1], 'o')
plt.text(C[0] * (1 + 0.05), C[1] * (1 - 0.1) , 'C')
plt.plot(D[0], D[1], 'o')
plt.text(D[0] * (1 + 0.05), D[1] * (1 - 0.1) , 'D')


plt.xlabel('$x$')
plt.ylabel('$y$')
plt.legend(loc='best')
plt.grid() # minor
plt.axis('equal')


plt.show()
